// Modelo de um objeto material: Livro
class Livro {
    constructor(titulo, autor, numeroDePaginas, anoPublicacao, genero) {
        this.titulo = titulo;
        this.autor = autor;
        this.numeroDePaginas = numeroDePaginas;
        this.anoPublicacao = anoPublicacao;
        this.genero = genero;
        this.estaEmprestado = false;
        this.dataDeEmprestimo = null;
        this.dataDeDevolucao = null;
        this.nota = null;
    }

    emprestar() {
        this.estaEmprestado = true;
        this.dataDeEmprestimo = new Date();
        // Outras ações relacionadas ao empréstimo.
    }

    devolver() {
        this.estaEmprestado = false;
        this.dataDeEmprestimo = null;
        this.dataDeDevolucao = new Date();
        // Outras ações relacionadas à devolução.
    }

    calcularAvaliacaoMedia() {
        // Calcula a média das notas atribuídas ao livro.
        // Retorna a média.
    }

    obterDetalhes() {
        // Retorna os detalhes do livro.
    }

    verificarDisponibilidade() {
        return !this.estaEmprestado;
    }

    atualizarNota(novaNota) {
        this.nota = novaNota;
    }

    prolongarEmprestimo() {
        // Prolonga o período de empréstimo.
    }

    verificarAtraso() {
        // Verifica se o livro está atrasado na devolução.
    }

    obterDiasRestantes() {
        // Retorna o número de dias restantes para a devolução.
    }
}

// Modelo de um objeto material: Lápis
class Lapis {
    constructor(cor, comprimento, pontaAfida, marca, material, temBorracha, tamanhoDaBorracha, preco, quantidade) {
        this.cor = cor;
        this.comprimento = comprimento;
        this.pontaAfida = pontaAfida;
        this.marca = marca;
        this.material = material;
        this.temBorracha = temBorracha;
        this.tamanhoDaBorracha = tamanhoDaBorracha;
        this.preco = preco;
        this.quantidade = quantidade;
    }

    afiarPonta() {
        this.pontaAfida = true;
    }

    escrever(texto) {
        // Escreve o texto com o lápis.
    }

    apagar() {
        if (this.temBorracha) {
            // Apaga o texto com a borracha.
        }
    }

    verificarDisponibilidade() {
        return this.quantidade > 0;
    }

    comprar(maisQuantidade) {
        this.quantidade += maisQuantidade;
    }

    verificarBorracha() {
        return this.temBorracha;
    }

    verificarPonta() {
        return this.pontaAfida;
    }

    amolarBorracha() {
        // Amola a borracha do lápis.
    }

    calcularPrecoTotal() {
        return this.preco * this.quantidade;
    }
}

// Modelo de um objeto abstrato: Aluno
class Aluno {
    constructor(nome, matricula, curso, idade, notas, frequencia, status, email, historicoAcademico) {
        this.nome = nome;
        this.matricula = matricula;
        this.curso = curso;
        this.idade = idade;
        this.notas = notas;
        this.frequencia = frequencia;
        this.status = status;
        this.email = email;
        this.historicoAcademico = historicoAcademico;
    }

    calcularMedia() {
        // Calcula a média das notas do aluno.
        // Retorna a média.
    }

    verificarAprovacao() {
        // Verifica se o aluno foi aprovado com base nas notas e frequência.
    }

    matricularDisciplina(disciplina) {
        // Registra a matrícula em uma disciplina.
    }

    trancarCurso() {
        // Tranca a matrícula no curso.
    }

    solicitarDiploma() {
        // Inicia o processo de solicitação de diploma.
    }

    enviarEmail(mensagem) {
        // Envia um e-mail para o aluno.
    }

    atualizarDadosPessoais(dados) {
        // Atualiza os dados pessoais do aluno.
    }

    obterHistorico() {
        // Retorna o histórico acadêmico do aluno.
    }

    participarAula(disciplina) {
        // Registra a participação do aluno em uma aula.
    }
}

// Modelo de um objeto abstrato: Calculadora
class Calculadora {
    constructor(marca, modelo, alimentacao, display, memoria, modoOperacao, historicoOperacoes, ligada, tamanhoTela) {
        this.marca = marca;
        this.modelo = modelo;
        this.alimentacao = alimentacao;
        this.display = display;
        this.memoria = memoria;
        this.modoOperacao = modoOperacao;
        this.historicoOperacoes = historicoOperacoes;
        this.ligada = ligada;
        this.tamanhoTela = tamanhoTela;
    }

    ligarDesligar() {
        this.ligada = !this.ligada;
    }

    limparDisplay() {
        // Limpa o conteúdo do display.
    }

    realizarOperacao(operacao) {
        // Realiza uma operação matemática.
    }

    armazenarNaMemoria() {
        // Armazena o valor no registro de memória.
    }

    recuperarMemoria() {
        // Recupera o valor armazenado na memória.
    }

    trocarModoOperacao(modo) {
        // Altera o modo de operação (adição, subtração, etc.).
    }

    mostrarHistorico() {
        // Exibe o histórico de operações realizadas.
    }

    ajustarBrilho(brilho) {
        // Ajusta o brilho da tela.
    }

    desligarAutoDesligamento() {
        // Desativa a função de desligamento automático.
    }
}
